{"ast":null,"code":"// formValidation.js\n\nexport const validatePropertyInput = propertyInput => {\n  const errors = {};\n  if (propertyInput.Area <= 100) {\n    errors.Area = \"No houses under sqft! Enter a larger area\";\n  } else if (propertyInput.Area > 10000) {\n    errors.Area = \"That's gigantic! This tool is for residential properties only. Please enter a smaller size.\";\n  }\n  if (propertyInput.Bedrooms === 0) {\n    errors.Bedrooms = \"No bedrooms? Please enter at least one bedroom. Are you looking for a studio apartment?\";\n  } else if (propertyInput.Bedrooms < 0) {\n    errors.Bedrooms = \"Negative bedrooms don't exist! Please enter a positive number of bedrooms.\";\n  } else if (propertyInput.Bedrooms > 8) {\n    errors.Bedrooms = \"Wow, that's a lot of bedrooms! Please enter 8 or fewer bedrooms.\";\n  }\n  if (propertyInput.Bathrooms === 0) {\n    errors.Bathrooms = \"A house without bathrooms? Please enter at least one bathroom. Every home needs a bathroom!\";\n  } else if (propertyInput.Bathrooms < 0) {\n    errors.Bathrooms = \"Negative bathrooms aren't a thing! Please enter a positive number of bathrooms.\";\n  } else if (propertyInput.Bathrooms > 10) {\n    errors.Bathrooms = \"That's a lot of bathrooms! Please enter 10 or fewer bathrooms.\";\n  }\n  if (propertyInput[\"Age of Property\"] < 0) {\n    errors[\"Age of Property\"] = \"A house from the future? Please enter a positive number for the property's age.\";\n  } else if (propertyInput[\"Age of Property\"] > 100) {\n    errors[\"Age of Property\"] = \"Wow, that's ancient! Are you searching for a historic home? Please enter a lower age for more typical properties.\";\n  }\n  if (!propertyInput.Location || propertyInput.Location.trim() === '') {\n    errors.Location = \"We need to know where it is! Please select a location for the property.\";\n  }\n  return errors;\n};","map":{"version":3,"names":["validatePropertyInput","propertyInput","errors","Area","Bedrooms","Bathrooms","Location","trim"],"sources":["/Users/jyothiprasannakambam/Desktop/Apps/my-real-estate-app copy/src/utils/formValidation.js"],"sourcesContent":["// formValidation.js\n\nexport const validatePropertyInput = (propertyInput) => {\n    const errors = {};\n\n    if (propertyInput.Area <= 100) {\n        errors.Area = \"No houses under sqft! Enter a larger area\";\n    } else if (propertyInput.Area > 10000) {\n        errors.Area = \"That's gigantic! This tool is for residential properties only. Please enter a smaller size.\";\n    }\n\n    if (propertyInput.Bedrooms === 0) {\n        errors.Bedrooms = \"No bedrooms? Please enter at least one bedroom. Are you looking for a studio apartment?\";\n    } else if (propertyInput.Bedrooms < 0) {\n        errors.Bedrooms = \"Negative bedrooms don't exist! Please enter a positive number of bedrooms.\";\n    } else if (propertyInput.Bedrooms > 8) {\n        errors.Bedrooms = \"Wow, that's a lot of bedrooms! Please enter 8 or fewer bedrooms.\";\n    }\n\n    if (propertyInput.Bathrooms === 0) {\n        errors.Bathrooms = \"A house without bathrooms? Please enter at least one bathroom. Every home needs a bathroom!\";\n    } else if (propertyInput.Bathrooms < 0) {\n        errors.Bathrooms = \"Negative bathrooms aren't a thing! Please enter a positive number of bathrooms.\";\n    } else if (propertyInput.Bathrooms > 10) {\n        errors.Bathrooms = \"That's a lot of bathrooms! Please enter 10 or fewer bathrooms.\";\n    }\n\n    if (propertyInput[\"Age of Property\"] < 0) {\n        errors[\"Age of Property\"] = \"A house from the future? Please enter a positive number for the property's age.\";\n    } else if (propertyInput[\"Age of Property\"] > 100) {\n        errors[\"Age of Property\"] = \"Wow, that's ancient! Are you searching for a historic home? Please enter a lower age for more typical properties.\";\n    }\n\n    if (!propertyInput.Location || propertyInput.Location.trim() === '') {\n        errors.Location = \"We need to know where it is! Please select a location for the property.\";\n    }\n\n    return errors;\n};\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,qBAAqB,GAAIC,aAAa,IAAK;EACpD,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAID,aAAa,CAACE,IAAI,IAAI,GAAG,EAAE;IAC3BD,MAAM,CAACC,IAAI,GAAG,2CAA2C;EAC7D,CAAC,MAAM,IAAIF,aAAa,CAACE,IAAI,GAAG,KAAK,EAAE;IACnCD,MAAM,CAACC,IAAI,GAAG,6FAA6F;EAC/G;EAEA,IAAIF,aAAa,CAACG,QAAQ,KAAK,CAAC,EAAE;IAC9BF,MAAM,CAACE,QAAQ,GAAG,yFAAyF;EAC/G,CAAC,MAAM,IAAIH,aAAa,CAACG,QAAQ,GAAG,CAAC,EAAE;IACnCF,MAAM,CAACE,QAAQ,GAAG,4EAA4E;EAClG,CAAC,MAAM,IAAIH,aAAa,CAACG,QAAQ,GAAG,CAAC,EAAE;IACnCF,MAAM,CAACE,QAAQ,GAAG,kEAAkE;EACxF;EAEA,IAAIH,aAAa,CAACI,SAAS,KAAK,CAAC,EAAE;IAC/BH,MAAM,CAACG,SAAS,GAAG,6FAA6F;EACpH,CAAC,MAAM,IAAIJ,aAAa,CAACI,SAAS,GAAG,CAAC,EAAE;IACpCH,MAAM,CAACG,SAAS,GAAG,iFAAiF;EACxG,CAAC,MAAM,IAAIJ,aAAa,CAACI,SAAS,GAAG,EAAE,EAAE;IACrCH,MAAM,CAACG,SAAS,GAAG,gEAAgE;EACvF;EAEA,IAAIJ,aAAa,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;IACtCC,MAAM,CAAC,iBAAiB,CAAC,GAAG,iFAAiF;EACjH,CAAC,MAAM,IAAID,aAAa,CAAC,iBAAiB,CAAC,GAAG,GAAG,EAAE;IAC/CC,MAAM,CAAC,iBAAiB,CAAC,GAAG,mHAAmH;EACnJ;EAEA,IAAI,CAACD,aAAa,CAACK,QAAQ,IAAIL,aAAa,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACjEL,MAAM,CAACI,QAAQ,GAAG,yEAAyE;EAC/F;EAEA,OAAOJ,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}