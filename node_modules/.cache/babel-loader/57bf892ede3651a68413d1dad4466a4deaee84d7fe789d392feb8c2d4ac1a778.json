{"ast":null,"code":"import{useState,useEffect}from'react';import{trainNetwork,predictPrice}from'./neuralNetwork';const useRealEstatePrediction=()=>{const[predictedPrice,setPredictedPrice]=useState(null);const[propertyInput,setPropertyInput]=useState({Area:\"\",Bedrooms:\"\",Bathrooms:\"\",Location:\"\",\"Age of Property\":\"\"});useEffect(()=>{trainNetwork(stats=>{console.log(`Training: ${stats.iterations} iterations`);});},[]);const handleInputChange=event=>{const{name,value}=event.target;setPropertyInput(prevInput=>({...prevInput,[name]:value}));};const handlePredictPrice=()=>{const predictedPriceValue=predictPrice(propertyInput);setPredictedPrice(predictedPriceValue);};return{predictedPrice,propertyInput,handleInputChange,handlePredictPrice};};export default useRealEstatePrediction;","map":{"version":3,"names":["useState","useEffect","trainNetwork","predictPrice","useRealEstatePrediction","predictedPrice","setPredictedPrice","propertyInput","setPropertyInput","Area","Bedrooms","Bathrooms","Location","stats","console","log","iterations","handleInputChange","event","name","value","target","prevInput","handlePredictPrice","predictedPriceValue"],"sources":["/Users/jyothiprasannakambam/Desktop/react-brainjs-realestate-predictor/src/useRealEstatePrediction.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { trainNetwork, predictPrice } from './neuralNetwork';\n\nconst useRealEstatePrediction = () => {\n    const [predictedPrice, setPredictedPrice] = useState(null);\n    const [propertyInput, setPropertyInput] = useState({\n        Area: \"\",\n        Bedrooms: \"\",\n        Bathrooms: \"\",\n        Location: \"\",\n        \"Age of Property\": \"\"\n    });\n\n    useEffect(() => {\n        trainNetwork((stats) => {\n            console.log(`Training: ${stats.iterations} iterations`);\n        });\n    }, []);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setPropertyInput(prevInput => ({ ...prevInput, [name]: value }));\n    };\n\n    const handlePredictPrice = () => {\n        const predictedPriceValue = predictPrice(propertyInput);\n        setPredictedPrice(predictedPriceValue);\n    };\n\n    return {\n        predictedPrice,\n        propertyInput,\n        handleInputChange,\n        handlePredictPrice\n    };\n};\n\nexport default useRealEstatePrediction;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,YAAY,CAAEC,YAAY,KAAQ,iBAAiB,CAE5D,KAAM,CAAAC,uBAAuB,CAAGA,CAAA,GAAM,CAClC,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGN,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACO,aAAa,CAAEC,gBAAgB,CAAC,CAAGR,QAAQ,CAAC,CAC/CS,IAAI,CAAE,EAAE,CACRC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,EAAE,CACbC,QAAQ,CAAE,EAAE,CACZ,iBAAiB,CAAE,EACvB,CAAC,CAAC,CAEFX,SAAS,CAAC,IAAM,CACZC,YAAY,CAAEW,KAAK,EAAK,CACpBC,OAAO,CAACC,GAAG,CAAC,aAAaF,KAAK,CAACG,UAAU,aAAa,CAAC,CAC3D,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,iBAAiB,CAAIC,KAAK,EAAK,CACjC,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,KAAK,CAACG,MAAM,CACpCb,gBAAgB,CAACc,SAAS,GAAK,CAAE,GAAGA,SAAS,CAAE,CAACH,IAAI,EAAGC,KAAM,CAAC,CAAC,CAAC,CACpE,CAAC,CAED,KAAM,CAAAG,kBAAkB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAAC,mBAAmB,CAAGrB,YAAY,CAACI,aAAa,CAAC,CACvDD,iBAAiB,CAACkB,mBAAmB,CAAC,CAC1C,CAAC,CAED,MAAO,CACHnB,cAAc,CACdE,aAAa,CACbU,iBAAiB,CACjBM,kBACJ,CAAC,CACL,CAAC,CAED,cAAe,CAAAnB,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}